//
// Copyright (c) 2018-2020 Bahtiar `kalkin-` Gadimov.
//
// This file is part of file-expert
// (see https://github.com/kalkin/file-expert).
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.
//
use lazy_static::lazy_static;
use std::collections::HashMap;

lazy_static! {
    pub static ref INTERPRETERS: HashMap<String, String> = [
        ("aidl".to_owned(), "AIDL".to_owned()),
        ("apl".to_owned(), "APL".to_owned()),
        ("aplx".to_owned(), "APL".to_owned()),
        ("dyalog".to_owned(), "APL".to_owned()),
        ("osascript".to_owned(), "AppleScript".to_owned()),
        ("asy".to_owned(), "Asymptote".to_owned()),
        ("awk".to_owned(), "Awk".to_owned()),
        ("gawk".to_owned(), "Awk".to_owned()),
        ("mawk".to_owned(), "Awk".to_owned()),
        ("nawk".to_owned(), "Awk".to_owned()),
        ("boogie".to_owned(), "Boogie".to_owned()),
        ("tcc".to_owned(), "C".to_owned()),
        ("coffee".to_owned(), "CoffeeScript".to_owned()),
        ("lisp".to_owned(), "Common Lisp".to_owned()),
        ("sbcl".to_owned(), "Common Lisp".to_owned()),
        ("ccl".to_owned(), "Common Lisp".to_owned()),
        ("clisp".to_owned(), "Common Lisp".to_owned()),
        ("ecl".to_owned(), "Common Lisp".to_owned()),
        (
            "cwl-runner".to_owned(),
            "Common Workflow Language".to_owned()
        ),
        ("crystal".to_owned(), "Crystal".to_owned()),
        ("dtrace".to_owned(), "DTrace".to_owned()),
        ("dafny".to_owned(), "Dafny".to_owned()),
        ("dart".to_owned(), "Dart".to_owned()),
        ("rune".to_owned(), "E".to_owned()),
        ("elixir".to_owned(), "Elixir".to_owned()),
        ("escript".to_owned(), "Erlang".to_owned()),
        ("fennel".to_owned(), "Fennel".to_owned()),
        ("gn".to_owned(), "GN".to_owned()),
        ("gerbv".to_owned(), "Gerber Image".to_owned()),
        ("gerbview".to_owned(), "Gerber Image".to_owned()),
        ("gnuplot".to_owned(), "Gnuplot".to_owned()),
        ("groovy".to_owned(), "Groovy".to_owned()),
        ("runghc".to_owned(), "Haskell".to_owned()),
        ("runhaskell".to_owned(), "Haskell".to_owned()),
        ("runhugs".to_owned(), "Haskell".to_owned()),
        ("hy".to_owned(), "Hy".to_owned()),
        ("io".to_owned(), "Io".to_owned()),
        ("ioke".to_owned(), "Ioke".to_owned()),
        ("jconsole".to_owned(), "J".to_owned()),
        ("janet".to_owned(), "Janet".to_owned()),
        ("chakra".to_owned(), "JavaScript".to_owned()),
        ("d8".to_owned(), "JavaScript".to_owned()),
        ("gjs".to_owned(), "JavaScript".to_owned()),
        ("js".to_owned(), "JavaScript".to_owned()),
        ("node".to_owned(), "JavaScript".to_owned()),
        ("nodejs".to_owned(), "JavaScript".to_owned()),
        ("qjs".to_owned(), "JavaScript".to_owned()),
        ("rhino".to_owned(), "JavaScript".to_owned()),
        ("v8".to_owned(), "JavaScript".to_owned()),
        ("v8-shell".to_owned(), "JavaScript".to_owned()),
        ("jolie".to_owned(), "Jolie".to_owned()),
        ("julia".to_owned(), "Julia".to_owned()),
        ("lsl".to_owned(), "LSL".to_owned()),
        ("lua".to_owned(), "Lua".to_owned()),
        ("M2".to_owned(), "Macaulay2".to_owned()),
        ("make".to_owned(), "Makefile".to_owned()),
        ("mmi".to_owned(), "Mercury".to_owned()),
        ("moon".to_owned(), "MoonScript".to_owned()),
        ("newlisp".to_owned(), "NewLisp".to_owned()),
        ("nextflow".to_owned(), "Nextflow".to_owned()),
        ("nush".to_owned(), "Nu".to_owned()),
        ("ocaml".to_owned(), "OCaml".to_owned()),
        ("ocamlrun".to_owned(), "OCaml".to_owned()),
        ("ocamlscript".to_owned(), "OCaml".to_owned()),
        ("openrc-run".to_owned(), "OpenRC runscript".to_owned()),
        ("php".to_owned(), "PHP".to_owned()),
        ("instantfpc".to_owned(), "Pascal".to_owned()),
        ("cperl".to_owned(), "Perl".to_owned()),
        ("perl".to_owned(), "Perl".to_owned()),
        ("picolisp".to_owned(), "PicoLisp".to_owned()),
        ("pil".to_owned(), "PicoLisp".to_owned()),
        ("pike".to_owned(), "Pike".to_owned()),
        ("pwsh".to_owned(), "PowerShell".to_owned()),
        ("swipl".to_owned(), "Prolog".to_owned()),
        ("yap".to_owned(), "Prolog".to_owned()),
        ("python".to_owned(), "Python".to_owned()),
        ("python2".to_owned(), "Python".to_owned()),
        ("python2.4".to_owned(), "Python".to_owned()),
        ("python2.5".to_owned(), "Python".to_owned()),
        ("python2.6".to_owned(), "Python".to_owned()),
        ("python2.7".to_owned(), "Python".to_owned()),
        ("python3".to_owned(), "Python".to_owned()),
        ("qmake".to_owned(), "QMake".to_owned()),
        ("Rscript".to_owned(), "R".to_owned()),
        ("regina".to_owned(), "REXX".to_owned()),
        ("rexx".to_owned(), "REXX".to_owned()),
        ("racket".to_owned(), "Racket".to_owned()),
        ("perl6".to_owned(), "Raku".to_owned()),
        ("raku".to_owned(), "Raku".to_owned()),
        ("rakudo".to_owned(), "Raku".to_owned()),
        ("ruby".to_owned(), "Ruby".to_owned()),
        ("macruby".to_owned(), "Ruby".to_owned()),
        ("rake".to_owned(), "Ruby".to_owned()),
        ("jruby".to_owned(), "Ruby".to_owned()),
        ("rbx".to_owned(), "Ruby".to_owned()),
        ("boolector".to_owned(), "SMT".to_owned()),
        ("cvc4".to_owned(), "SMT".to_owned()),
        ("mathsat5".to_owned(), "SMT".to_owned()),
        ("opensmt".to_owned(), "SMT".to_owned()),
        ("smtinterpol".to_owned(), "SMT".to_owned()),
        ("smt-rat".to_owned(), "SMT".to_owned()),
        ("stp".to_owned(), "SMT".to_owned()),
        ("verit".to_owned(), "SMT".to_owned()),
        ("yices2".to_owned(), "SMT".to_owned()),
        ("z3".to_owned(), "SMT".to_owned()),
        ("scala".to_owned(), "Scala".to_owned()),
        ("scheme".to_owned(), "Scheme".to_owned()),
        ("guile".to_owned(), "Scheme".to_owned()),
        ("bigloo".to_owned(), "Scheme".to_owned()),
        ("chicken".to_owned(), "Scheme".to_owned()),
        ("csi".to_owned(), "Scheme".to_owned()),
        ("gosh".to_owned(), "Scheme".to_owned()),
        ("r6rs".to_owned(), "Scheme".to_owned()),
        ("ash".to_owned(), "Shell".to_owned()),
        ("bash".to_owned(), "Shell".to_owned()),
        ("dash".to_owned(), "Shell".to_owned()),
        ("ksh".to_owned(), "Shell".to_owned()),
        ("mksh".to_owned(), "Shell".to_owned()),
        ("pdksh".to_owned(), "Shell".to_owned()),
        ("rc".to_owned(), "Shell".to_owned()),
        ("sh".to_owned(), "Shell".to_owned()),
        ("zsh".to_owned(), "Shell".to_owned()),
        ("sclang".to_owned(), "SuperCollider".to_owned()),
        ("scsynth".to_owned(), "SuperCollider".to_owned()),
        ("tclsh".to_owned(), "Tcl".to_owned()),
        ("wish".to_owned(), "Tcl".to_owned()),
        ("tcsh".to_owned(), "Tcsh".to_owned()),
        ("csh".to_owned(), "Tcsh".to_owned()),
        ("makeinfo".to_owned(), "Texinfo".to_owned()),
        ("deno".to_owned(), "TypeScript".to_owned()),
        ("ts-node".to_owned(), "TypeScript".to_owned()),
        ("fish".to_owned(), "fish".to_owned()),
        ("gsed".to_owned(), "sed".to_owned()),
        ("minised".to_owned(), "sed".to_owned()),
        ("sed".to_owned(), "sed".to_owned()),
        ("ssed".to_owned(), "sed".to_owned()),
    ]
    .iter()
    .cloned()
    .collect();
}
